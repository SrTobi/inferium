
> ts-reader@1.0.0 build /home/tobi/workspace/inferium/extras/ts-reader
> tsc -p .

Install extract-stack into /tmp/inferium
Done.

Search types...
Look into <inf>/extract-stack
Force installation of node types...
Install types for node
Done.

Gather types...
File: <inf>/extract-stack/_inferium_gather.ts
Gather types for 0 packages:
=>  

Write gather file
Done.

Analyse program
Done.

global: global
imported: 
ambient modules: "inspector", "buffer", "querystring", "events", "http", "cluster", "zlib", "os", "https", "punycode", "repl", "readline", "vm", "child_process", "url", "dns", "net", "dgram", "fs", "path", "string_decoder", "tls", "crypto", "stream", "util", "assert", "tty", "domain", "constants", "module", "process", "v8", "timers", "console", "async_hooks", "http2", "perf_hooks"

Incorporated files:
=> <org>/extras/ts-reader/node_modules/typescript/lib/lib.d.ts
=> <inf>/extract-stack/_inferium_gather.ts
=> <inf>/@types/node/inspector.d.ts
=> <inf>/@types/node/index.d.ts

Done.

Write result to /tmp/inferium/result.json
Done.
[info] Loading settings from idea.sbt ...
[info] Loading global plugins from /home/tobi/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/tobi/workspace/inferium/project
[info] Loading settings from build.sbt ...
[info] Set current project to inferium (in build file:/home/tobi/workspace/inferium/)
[info] Running (fork) inferium.CliMain /tmp/inferium/node_modules/extract-stack /tmp/inferium/result.json
[info] ======= Inferium - Tobias Kahlert ======
[info] MainScript: /tmp/inferium/node_modules/extract-stack
[info] TypesFile:  /tmp/inferium/result.json
[info] ======= Get Prelude ======
[info] Prelude contains following types:
[info] "module", "timers", "https", "zlib", "fs", "assert", "dgram", "async_hooks", "url", "dns", "http", "string_decoder", "querystring", "events", "os", "util", "constants", "punycode", "readline", "perf_hooks", "buffer", "domain", "tty", "child_process", "crypto", "inspector", "stream", "process", "path", "v8", "http2", "cluster", "tls", "net", "repl", "console", "vm"
[info] ======= Initialize ======
[info] Done.
[info] ======= Analysing =======
[info] Parse module '/tmp/inferium/node_modules/extract-stack/./index.js'
[info] Done Parsing module.
[info] Found None
[info] Found None
[info] Round 0
[info] Analyse None
[info] Analyse None
[info] Round 1
[info] Analyse None
[info] Analyse None
[info] Round 2
[info] Analyse None
[info] skipped
[info] Done
[info] ======= Print Type Definition ======
[info] interface I30<T1> {
[info]   (_?: "
[info] "): T1
[info] }
[info] interface I31<T13> {
[info]   (_?: number): T13
[info] }
[info] interface I37<T1, T10 extends I30<T1>> {
[info]   split: T10
[info] }
[info] interface I36<T1, T10 extends I30<T1>, T9 extends I37<T1, T10>> {
[info]   (_?: {}, _?: ""): T9
[info] }
[info] interface I35<T1, T10 extends I30<T1>, T8 extends I36<T1, T10, T9>, T9 extends I37<T1, T10>> {
[info]   replace: T8
[info] }
[info] interface I34<T1, T10 extends I30<T1>, T7 extends I35<T1, T10, T8, T9>, T8 extends I36<T1, T10, T9>, T9 extends I37<T1, T10>> {
[info]   (_?: number): T7
[info] }
[info] interface I33<T1, T10 extends I30<T1>, T12 extends I31<T13>, T13, T6 extends I34<T1, T10, T7, T8, T9>, T7 extends I35<T1, T10, T8, T9>, T8 extends I36<T1, T10, T9>, T9 extends I37<T1, T10>> {
[info]   slice: (T12 | T6)
[info] }
[info] interface I32<T1, T10 extends I30<T1>, T12 extends I31<T13>, T13, T17 extends I33<T1, T10, T12, T13, T6, T7, T8, T9>, T6 extends I34<T1, T10, T7, T8, T9>, T7 extends I35<T1, T10, T8, T9>, T8 extends I36<T1, T10, T9>, T9 extends I37<T1, T10>> {
[info]   [0]: (T17)
[info] }
[info] interface I39<T1, T10 extends I30<T1>, T12 extends I31<T13>, T13, T17 extends I33<T1, T10, T12, T13, T6, T7, T8, T9>, T6 extends I34<T1, T10, T7, T8, T9>, T7 extends I35<T1, T10, T8, T9>, T8 extends I36<T1, T10, T9>, T9 extends I37<T1, T10>> {
[info]   [0]: (T17)
[info] }
[info] interface I38<T1, T10 extends I30<T1>, T12 extends I31<T13>, T13, T16 extends (I32<T1, T10, T12, T13, T17, T6, T7, T8, T9> | boolean), T17 extends I33<T1, T10, T12, T13, T6, T7, T8, T9>, T4 extends (I39<T1, T10, T12, T13, T17, T6, T7, T8, T9> | boolean), T6 extends I34<T1, T10, T7, T8, T9>, T7 extends I35<T1, T10, T8, T9>, T8 extends I36<T1, T10, T9>, T9 extends I37<T1, T10>> {
[info]   (_?: {}): T16
[info]   (_?: {}): T4
[info] }
[info] interface I40<T1, T10 extends I30<T1>, T12 extends I31<T13>, T13, T16 extends (I32<T1, T10, T12, T13, T17, T6, T7, T8, T9> | boolean), T17 extends I33<T1, T10, T12, T13, T6, T7, T8, T9>, T26 extends I38<T1, T10, T12, T13, T16, T17, T4, T6, T7, T8, T9>, T4 extends (I39<T1, T10, T12, T13, T17, T6, T7, T8, T9> | boolean), T6 extends I34<T1, T10, T7, T8, T9>, T7 extends I35<T1, T10, T8, T9>, T8 extends I36<T1, T10, T9>, T9 extends I37<T1, T10>> {
[info]   match: (T26)
[info] }
[info] interface I42<T1, T10 extends I30<T1>, T12 extends I31<T13>, T13, T16 extends (I32<T1, T10, T12, T13, T17, T6, T7, T8, T9> | boolean), T17 extends I33<T1, T10, T12, T13, T6, T7, T8, T9>, T26 extends I38<T1, T10, T12, T13, T16, T17, T4, T6, T7, T8, T9>, T4 extends (I39<T1, T10, T12, T13, T17, T6, T7, T8, T9> | boolean), T6 extends I34<T1, T10, T7, T8, T9>, T7 extends I35<T1, T10, T8, T9>, T8 extends I36<T1, T10, T9>, T9 extends I37<T1, T10>> {
[info]   match: (T26)
[info] }
[info] interface I41<T1, T10 extends I30<T1>, T12 extends I31<T13>, T13, T16 extends (I32<T1, T10, T12, T13, T17, T6, T7, T8, T9> | boolean), T17 extends I33<T1, T10, T12, T13, T6, T7, T8, T9>, T26 extends I38<T1, T10, T12, T13, T16, T17, T4, T6, T7, T8, T9>, T4 extends (I39<T1, T10, T12, T13, T17, T6, T7, T8, T9> | boolean), T6 extends I34<T1, T10, T7, T8, T9>, T7 extends I35<T1, T10, T8, T9>, T8 extends I36<T1, T10, T9>, T9 extends I37<T1, T10>> {
[info]   stack: (I42<T1, T10, T12, T13, T16, T17, T26, T4, T6, T7, T8, T9> | boolean)
[info] }
[info] interface I44<T1, T10 extends I30<T1>, T12 extends I31<T13>, T13, T16 extends (I32<T1, T10, T12, T13, T17, T6, T7, T8, T9> | boolean), T17 extends I33<T1, T10, T12, T13, T6, T7, T8, T9>, T26 extends I38<T1, T10, T12, T13, T16, T17, T4, T6, T7, T8, T9>, T4 extends (I39<T1, T10, T12, T13, T17, T6, T7, T8, T9> | boolean), T6 extends I34<T1, T10, T7, T8, T9>, T7 extends I35<T1, T10, T8, T9>, T8 extends I36<T1, T10, T9>, T9 extends I37<T1, T10>> {
[info]   match: (T26)
[info] }
[info] interface I43<T1, T10 extends I30<T1>, T12 extends I31<T13>, T13, T16 extends (I32<T1, T10, T12, T13, T17, T6, T7, T8, T9> | boolean), T17 extends I33<T1, T10, T12, T13, T6, T7, T8, T9>, T26 extends I38<T1, T10, T12, T13, T16, T17, T4, T6, T7, T8, T9>, T4 extends (I39<T1, T10, T12, T13, T17, T6, T7, T8, T9> | boolean), T6 extends I34<T1, T10, T7, T8, T9>, T7 extends I35<T1, T10, T8, T9>, T8 extends I36<T1, T10, T9>, T9 extends I37<T1, T10>> {
[info]   match: (T26)
[info]   stack: (I44<T1, T10, T12, T13, T16, T17, T26, T4, T6, T7, T8, T9> | boolean)
[info] }
[info] interface I29<T1, T10 extends I30<T1>, T12 extends I31<T13>, T13, T16 extends (I32<T1, T10, T12, T13, T17, T6, T7, T8, T9> | boolean), T17 extends I33<T1, T10, T12, T13, T6, T7, T8, T9>, T26 extends I38<T1, T10, T12, T13, T16, T17, T4, T6, T7, T8, T9>, T4 extends (I39<T1, T10, T12, T13, T17, T6, T7, T8, T9> | boolean), T6 extends I34<T1, T10, T7, T8, T9>, T7 extends I35<T1, T10, T8, T9>, T8 extends I36<T1, T10, T9>, T9 extends I37<T1, T10>> {
[info]   (err: ((object & (I40<T1, T10, T12, T13, T16, T17, T26, T4, T6, T7, T8, T9> | boolean) & I41<T1, T10, T12, T13, T16, T17, T26, T4, T6, T7, T8, T9>))): ("" | T13)
[info]   lines(stack: (I43<T1, T10, T12, T13, T16, T17, T26, T4, T6, T7, T8, T9> | (object & boolean))): T1
[info] }
[info] => I29<any, I30<T1>, I31<T13>, any, (I32<T1, T10, T12, T13, T17, T6, T7, T8, T9> | boolean), I33<T1, T10, T12, T13, T6, T7, T8, T9>, I38<T1, T10, T12, T13, T16, T17, T4, T6, T7, T8, T9>, (I39<T1, T10, T12, T13, T17, T6, T7, T8, T9> | boolean), I34<T1, T10, T7, T8, T9>, I35<T1, T10, T8, T9>, I36<T1, T10, T9>, I37<T1, T10>>
[success] Total time: 3 s, completed Jul 29, 2018 8:54:07 PM
