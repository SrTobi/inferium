
> ts-reader@1.0.0 build /home/tobi/workspace/inferium/extras/ts-reader
> tsc -p .

Install lodash.rangeright into /tmp/inferium
Done.

Search types...
Look into <inf>/lodash.rangeright
Force installation of node types...
Install types for node
Done.

Gather types...
File: <inf>/lodash.rangeright/_inferium_gather.ts
Gather types for 0 packages:
=>  

Write gather file
Done.

Analyse program
Done.

global: global
imported: 
ambient modules: "inspector", "buffer", "querystring", "events", "http", "cluster", "zlib", "os", "https", "punycode", "repl", "readline", "vm", "child_process", "url", "dns", "net", "dgram", "fs", "path", "string_decoder", "tls", "crypto", "stream", "util", "assert", "tty", "domain", "constants", "module", "process", "v8", "timers", "console", "async_hooks", "http2", "perf_hooks"

Incorporated files:
=> <org>/extras/ts-reader/node_modules/typescript/lib/lib.d.ts
=> <inf>/lodash.rangeright/_inferium_gather.ts
=> <inf>/@types/node/inspector.d.ts
=> <inf>/@types/node/index.d.ts

Done.

Write result to /tmp/inferium/result.json
Done.
[info] Loading settings from idea.sbt ...
[info] Loading global plugins from /home/tobi/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/tobi/workspace/inferium/project
[info] Loading settings from build.sbt ...
[info] Set current project to inferium (in build file:/home/tobi/workspace/inferium/)
[info] Running (fork) inferium.CliMain /tmp/inferium/node_modules/lodash.rangeright /tmp/inferium/result.json
[info] ======= Inferium - Tobias Kahlert ======
[info] MainScript: /tmp/inferium/node_modules/lodash.rangeright
[info] TypesFile:  /tmp/inferium/result.json
[info] ======= Get Prelude ======
[info] Prelude contains following types:
[info] "module", "timers", "https", "zlib", "fs", "assert", "dgram", "async_hooks", "url", "dns", "http", "string_decoder", "querystring", "events", "os", "util", "constants", "punycode", "readline", "perf_hooks", "buffer", "domain", "tty", "child_process", "crypto", "inspector", "stream", "process", "path", "v8", "http2", "cluster", "tls", "net", "repl", "console", "vm"
[info] ======= Initialize ======
[info] Done.
[info] ======= Analysing =======
[info] Parse module '/tmp/inferium/node_modules/lodash.rangeright/./index.js'
[info] Done Parsing module.
[info] Found None
[info] Round 0
[info] Analyse None
[info] Round 1
[info] Analyse None
[info] Round 2
[info] Analyse None
[info] Done
[info] ======= Print Type Definition ======
[info] interface I61<T7> {
[info]   (_?: number): T7
[info] }
[info] interface I60<T6 extends I61<T7>, T7> {
[info]   slice: T6
[info] }
[info] interface I59<T5 extends (I60<T6, T7> | number), T6 extends I61<T7>, T7> {
[info]   (_?: {}, _?: ""): T5
[info] }
[info] interface I63<T4 extends I59<T5, T6, T7>, T5 extends (I60<T6, T7> | number), T6 extends I61<T7>, T7> {
[info]   replace: T4
[info] }
[info] interface I62<T4 extends I59<T5, T6, T7>, T5 extends (I60<T6, T7> | number), T6 extends I61<T7>, T7> {
[info]   (): (I63<T4, T5, T6, T7> | (boolean & (number | string) & number))
[info] }
[info] interface I58<T4 extends I59<T5, T6, T7>, T5 extends (I60<T6, T7> | number), T6 extends I61<T7>, T7> {
[info]   replace: T4
[info]   valueOf: (I62<T4, T5, T6, T7>)
[info] }
[info] interface I67<T23> {
[info]   (_?: number): T23
[info] }
[info] interface I66<T22 extends I67<T23>, T23> {
[info]   slice: T22
[info] }
[info] interface I65<T21 extends (I66<T22, T23> | number), T22 extends I67<T23>, T23> {
[info]   (_?: {}, _?: ""): T21
[info] }
[info] interface I69<T20 extends I65<T21, T22, T23>, T21 extends (I66<T22, T23> | number), T22 extends I67<T23>, T23> {
[info]   replace: T20
[info] }
[info] interface I68<T20 extends I65<T21, T22, T23>, T21 extends (I66<T22, T23> | number), T22 extends I67<T23>, T23> {
[info]   (): (I69<T20, T21, T22, T23> | (boolean & (number | string) & number))
[info] }
[info] interface I64<T20 extends I65<T21, T22, T23>, T21 extends (I66<T22, T23> | number), T22 extends I67<T23>, T23> {
[info]   replace: T20
[info]   valueOf: (I68<T20, T21, T22, T23>)
[info] }
[info] interface I73<T39> {
[info]   (_?: number): T39
[info] }
[info] interface I72<T38 extends I73<T39>, T39> {
[info]   slice: T38
[info] }
[info] interface I71<T37 extends (I72<T38, T39> | number), T38 extends I73<T39>, T39> {
[info]   (_?: {}, _?: ""): T37
[info] }
[info] interface I75<T36 extends I71<T37, T38, T39>, T37 extends (I72<T38, T39> | number), T38 extends I73<T39>, T39> {
[info]   replace: T36
[info] }
[info] interface I74<T36 extends I71<T37, T38, T39>, T37 extends (I72<T38, T39> | number), T38 extends I73<T39>, T39> {
[info]   (): (I75<T36, T37, T38, T39> | (boolean & (number | string) & number))
[info] }
[info] interface I70<T36 extends I71<T37, T38, T39>, T37 extends (I72<T38, T39> | number), T38 extends I73<T39>, T39> {
[info]   replace: T36
[info]   valueOf: (I74<T36, T37, T38, T39>)
[info] }
[info] interface I76 {
[info]   length: ((number & boolean))
[info] }
[info] interface I57 {
[info]   (start: ((number & (number | string) & (I58<I59<T5, T6, T7>, (I60<T6, T7> | number), I61<T7>, any> | (boolean & (number | string) & number)))), end: ((number & (I64<I65<T21, T22, T23>, (I66<T22, T23> | number), I67<T23>, any> | (boolean & (number | string) & number)))), step: (((I70<I71<T37, T38, T39>, (I72<T38, T39> | number), I73<T39>, any> | (boolean & (number | string) & number)) & number & (number | string) & (I76 | boolean)))): ({})
[info] }
[info] => I57
[success] Total time: 4 s, completed Jul 29, 2018 9:20:44 PM
