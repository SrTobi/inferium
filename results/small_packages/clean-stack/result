
> ts-reader@1.0.0 build /home/tobi/workspace/inferium/extras/ts-reader
> tsc -p .

Install clean-stack into /tmp/inferium
Done.

Search types...
Look into <inf>/clean-stack
Force installation of node types...
Install types for node
Done.

Gather types...
File: <inf>/clean-stack/_inferium_gather.ts
Gather types for 0 packages:
=>  

Write gather file
Done.

Analyse program
Done.

global: global
imported: 
ambient modules: "inspector", "buffer", "querystring", "events", "http", "cluster", "zlib", "os", "https", "punycode", "repl", "readline", "vm", "child_process", "url", "dns", "net", "dgram", "fs", "path", "string_decoder", "tls", "crypto", "stream", "util", "assert", "tty", "domain", "constants", "module", "process", "v8", "timers", "console", "async_hooks", "http2", "perf_hooks"

Incorporated files:
=> <org>/extras/ts-reader/node_modules/typescript/lib/lib.d.ts
=> <inf>/clean-stack/_inferium_gather.ts
=> <inf>/@types/node/inspector.d.ts
=> <inf>/@types/node/index.d.ts

Done.

Write result to /tmp/inferium/result.json
Done.
[info] Loading settings from idea.sbt ...
[info] Loading global plugins from /home/tobi/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/tobi/workspace/inferium/project
[info] Loading settings from build.sbt ...
[info] Set current project to inferium (in build file:/home/tobi/workspace/inferium/)
[info] Running (fork) inferium.CliMain /tmp/inferium/node_modules/clean-stack /tmp/inferium/result.json
[info] ======= Inferium - Tobias Kahlert ======
[info] MainScript: /tmp/inferium/node_modules/clean-stack
[info] TypesFile:  /tmp/inferium/result.json
[info] ======= Get Prelude ======
[info] Prelude contains following types:
[info] "module", "timers", "https", "zlib", "fs", "assert", "dgram", "async_hooks", "url", "dns", "http", "string_decoder", "querystring", "events", "os", "util", "constants", "punycode", "readline", "perf_hooks", "buffer", "domain", "tty", "child_process", "crypto", "inspector", "stream", "process", "path", "v8", "http2", "cluster", "tls", "net", "repl", "console", "vm"
[info] ======= Initialize ======
[info] Done.
[info] ======= Analysing =======
[info] Parse module '/tmp/inferium/node_modules/clean-stack/./index.js'
[info] Done Parsing module.
[info] Found None
[info] Round 0
[info] Analyse None
[info] Found None
[info] Found None
[info] Found None
[info] Round 1
[info] Analyse None
[info] Analyse None
[info] Analyse None
[info] Analyse None
[info] Round 2
[info] Analyse None
[info] Analyse None
[info] Analyse None
[info] skipped
[info] Round 3
[info] skipped
[info] skipped
[info] Analyse None
[info] skipped
[info] Done
[info] ======= Print Type Definition ======
[info] interface I49 {
[info]   (_?: ".app/Contents/Resources/default_app.asar"): any
[info]   (_?: ".app/Contents/Resources/electron.asar"): any
[info] }
[info] interface I48 {
[info]   includes: (I49)
[info] }
[info] interface I47 {
[info]   [1]: ((boolean & I48))
[info] }
[info] interface I46 {
[info]   (_?: {}): I47
[info] }
[info] interface I45 {
[info]   match: I46
[info] }
[info] interface I44 {
[info]   (x: I45): boolean
[info] }
[info] interface I54 {
[info]   (): any
[info] }
[info] interface I53 {
[info]   trim: I54
[info] }
[info] interface I52 {
[info]   (x: I53): boolean
[info] }
[info] interface I58<T15> {
[info]   (_?: {}, _?: {}): T15
[info] }
[info] interface I59<T15, T17 extends I58<T15>> {
[info]   replace: T17
[info] }
[info] interface I57 {
[info]   <T15, T17 extends I58<T15>, T18 extends I59<T15, T17>>(x: (T18)): (T18 | T15)
[info] }
[info] interface I61<T1> {
[info]   (_?: "
[info] "): T1
[info] }
[info] interface I60<T1> {
[info]   join: I61<T1>
[info] }
[info] interface I56<T1> {
[info]   (_?: I57): I60<T1>
[info] }
[info] interface I55<T1> {
[info]   map: I56<T1>
[info] }
[info] interface I51<T1> {
[info]   (_?: I52): I55<T1>
[info] }
[info] interface I50<T1> {
[info]   filter: I51<T1>
[info] }
[info] interface I43<T1> {
[info]   (_?: I44): I50<T1>
[info] }
[info] interface I42<T1> {
[info]   filter: I43<T1>
[info] }
[info] interface I41<T1> {
[info]   (_?: "
[info] "): I42<T1>
[info] }
[info] interface I40<T1> {
[info]   split: I41<T1>
[info] }
[info] interface I39<T1> {
[info]   (_?: {}, _?: "/"): I40<T1>
[info] }
[info] interface I38<T1> {
[info]   replace: I39<T1>
[info] }
[info] interface I62 {
[info]   pretty: any
[info] }
[info] interface I37 {
[info]   <T1>(stack: I38<T1>, options: (I62)): T1
[info] }
[info] => I37
[success] Total time: 3 s, completed Jul 29, 2018 7:36:34 PM
